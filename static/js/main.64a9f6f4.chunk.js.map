{"version":3,"sources":["utility/dataConverter.js","components/dashboard/StatusJumbotron.js","components/dashboard/data/tableColumns.js","components/dashboard/CaseTable.js","pages/dashboard/Dashboard.js","redux/actions/caseDataActions.js","redux/constant.js","redux/reducers/caseDataReducer.js","redux/reducers/rootReducer.js","store.js","App.js","index.js"],"names":["DateDatacFormatter","string","dateToFormat","Date","parse","format","date","connect","state","metaData","isLoad","casedata","result","props","metadata_created","metadata_modified","Jumbotron","className","target","rel","href","icon","faGithub","headerFormat","column","colIndex","sortElement","filterElement","title","text","style","cursor","fontSize","minWidth","rowFormat","cell","tableColumns","dataField","hidden","sort","headerFormatter","headerStyle","width","formatter","customTotalFormatter","from","to","size","CustomSearchBar","input","useState","inputValue","setInputValue","ref","n","type","onKeyPress","event","key","onSearch","value","handleKeyPress","placeholder","onChange","handleOnChange","onClick","faSearch","faTimesCircle","CaseTable","data","minHeight","keyField","_","orderBy","columns","tableColumn","search","Row","Col","searchProps","role","baseProps","bootstrap4","bordered","noDataIndication","aria-hidden","pagination","paginationFactory","sizePerPage","sizePerPageList","showTotal","paginationTotalRenderer","Dashboard","this","getCaseListData","getCaseMetaData","caseData","StatusJumbotron","Container","fluid","Card","CardBody","lg","Component","caseList","dispatch","fetch","then","r","object","apiResult","JSON","replace","payload","forEach","item","i","id","catch","response","json","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64a9f6f4.chunk.js","sourcesContent":["import React from 'react';\nimport Moment from 'react-moment';\n\nexport const DateDatacFormatter = ({ string }) => {\n  const dateToFormat = Date.parse(string);\n  return (\n    <Moment format=\"MMMM DD, YYYY\" date={dateToFormat} />\n  );\n}","import React from \"react\";\nimport { connect } from 'react-redux'\nimport { Jumbotron } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { DateDatacFormatter } from \"../../utility/dataConverter\";\n\nconst Statusumbotron = (props) => {\n  // const { } = props;\n  const { metadata_created, metadata_modified } = props.metaData.result;\n  return (\n    <Jumbotron className=\"bg-white rounded-lg shadow-sm \">\n      <p className=\"lead\">Taiwan COVID-19 cases summarized by region, age group and gender</p>\n      <hr />\n      <strong>SUMMARY</strong>\n      <p>\n        This dataset represents the COVID-19 positive confirmed cases area, age and gender in Taiwan by the date of confirmation. The raw data is retrieved from <a target=\"_blank\" rel='noopener noreferrer'\n          href={\"//data.cdc.gov.tw/en/dataset/agsdctable-day-19cov\"}>Taiwan CDC Open Data Portal</a> and translated from Chinese to English by <a target=\"_blank\" rel='noopener noreferrer'\n            href={\"//github.com/haoyt5\"}><FontAwesomeIcon icon={faGithub} /> haoyt5</a>.\n      </p>\n      <strong>UPDATE PROCESS</strong>\n      <p>\n        It is a daily updated dataset, created at  {<DateDatacFormatter string={metadata_created} />}. The last updated date is {<DateDatacFormatter string={metadata_modified} />}.\n      </p>\n    </Jumbotron>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    metaData: {\n      isLoad: state.casedata.metaData.isLoad,\n      result: state.casedata.metaData.result\n    }\n  }\n}\nexport default connect(mapStateToProps, null)(Statusumbotron);","import React from \"react\";\nimport Moment from 'react-moment';\n// import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nconst headerStyleObject = (styleObject) => {\n  return styleObject\n}\n\nconst headerFormat = (column, colIndex, { sortElement, filterElement }) => {\n  return (\n    <>\n      <div title={column.text}\n        className=\"text-truncate d-block\"\n        style={{ cursor: \"pointer\", fontSize: \"12px\", minWidth: \"5ch\" }}\n      >{column.text}{sortElement}</div>\n      {/* <label style={{ \"visibility\": \"hidden\", width: 0, display: \"none\" }}>{filterElement}</label> */}\n    </>\n  );\n}\nconst rowFormat = (cell) => {\n  return (\n    <span title={cell} className=\"text-truncate d-block\"\n    style={{minWidth: \"5ch\" }}><small>{cell}</small></span>\n  );\n}\n\nexport const timeStampRowFormat = (cell) => {\n  if (!cell) {\n    return \"\";\n  }\n  return (\n    <span title={cell} className=\"text-truncate d-block\"\n    style={{minWidth: \"5ch\" }}><small>\n                  <Moment format=\"MMMM DD YYYY\">\n                  {cell}\n            </Moment>\n    </small>\n    </span>\n  );\n}\n\nconst tableColumns = [\n  {\n    dataField: 'id',\n    hidden: true\n  },\n  {\n    dataField: 'data_as_of',\n    text: 'Confirmed Date',\n    sort: true,\n    headerFormatter: headerFormat,\n    headerStyle: headerStyleObject({ width: \"22%\" }),\n    formatter: rowFormat\n  },\n  {\n    dataField: 'confirmed_case_count',\n    text: 'Count',\n    sort: true,\n    headerFormatter: headerFormat,\n    headerStyle: headerStyleObject({ width: \"12%\" }),\n    formatter: rowFormat\n  },\n  {\n    dataField: 'county_city',\n    text: 'County/City',\n    sort: true,\n    headerFormatter: headerFormat,\n    headerStyle: headerStyleObject({ width: \"22%\" }),\n    formatter: rowFormat\n  },\n  {\n    dataField: 'gender',\n    text: 'Gender',\n    sort: true,\n    headerFormatter: headerFormat,\n    formatter: rowFormat\n  },\n  {\n    dataField: 'age_group',\n    text: 'Age Group',\n    sort: true,\n    headerFormatter: headerFormat,\n    formatter: rowFormat\n  },\n  {\n    dataField: 'imported',\n    text: 'Imported',\n    sort: true,\n    headerFormatter: headerFormat,\n    formatter: rowFormat\n\n  },\n\n\n]\n\nexport default tableColumns;","import React, { useState } from 'react';\nimport { Row, Col } from \"reactstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport tableColumn from \"../../components/dashboard/data/tableColumns\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport _ from \"lodash\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport \"../../components/dashboard/Dashboard.css\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport { DateDatacFormatter } from \"../../utility/dataConverter\";\n\nconst customTotalFormatter = (from, to, size) => {\n  return (\n    <strong style={{ fontSize: \"12px\" }}>\n      Showing {size > 1 ? \"Rows\" : \"Row\"} {from} - {to} out of {size} \n    </strong>\n  );\n};\n\nconst CustomSearchBar = (props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  let input;\n  const handleCleearClick = () => {\n    props.onSearch('');\n    input.value = \"\"\n    setInputValue(\"\")\n  }\n  const handleOnChange = (inputValue) => {\n    setInputValue(inputValue)\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      props.onSearch(input.value);\n    }\n  };\n  const handleClick = () => {\n    props.onSearch(input.value);\n  };\n  return (\n    <>\n      <div className=\"d-flex\">\n        <input\n          className=\"form-control custom-search-bar mr-2\"\n          ref={n => input = n}\n          type=\"text\"\n          onKeyPress={event => handleKeyPress(event)}\n          placeholder=\"search\"\n          onChange={() => handleOnChange(input.value)}\n        />\n        <div className=\"search-button pl-4 pr-4\"\n          onClick={handleClick}> <span><FontAwesomeIcon icon={faSearch} /></span>\n        </div>\n      </div>\n      <div className=\"pt-3 d-flex justify-content-flex-end\">\n        {inputValue ? <button className=\"badge badge-pill badge-dark clear-badge-button\" onClick={() => handleCleearClick()} >\"{inputValue}\" <FontAwesomeIcon icon={faTimesCircle} /></button> : null}\n\n      </div>\n    </>\n  );\n};\n\nconst CaseTable = (props) => {\n\n  const { isLoad, data, metaData } = props;\n\n  return (\n    <div style={{ minHeight: \"25vw\" }}>\n      <ToolkitProvider\n        keyField=\"id\"\n        data={isLoad ? _.orderBy(data, [\"data_as_of\", \"confirmed_case_count\"], [\"desc\", \"desc\"]) : []}\n        columns={tableColumn}\n        search\n      >{\n          props => (\n            <>\n              <Row className=\"pb-2\">\n                <Col>\n                  <CustomSearchBar {...props.searchProps} />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div className=\"d-flex justify-content-end\">\n                    <small>Data Last Updated: {metaData.isLoad ? <DateDatacFormatter string={metaData.result.metadata_modified} /> :\n                      <div className=\"spinner-grow spinner-grow-sm text-primary\" role=\"status\">\n                        <span className=\"sr-only text-primary\"></span>\n                      </div>}\n                    </small>\n                  </div>\n                </Col>\n              </Row>\n              <hr />\n              <Row>\n                <Col>\n                  <BootstrapTable {...props.baseProps}\n                    bootstrap4 bordered={false}\n                    noDataIndication={() => !isLoad ? <div className=\"w-100 text-center\">no data</div> : <div className=\"w-100 text-center\"> <span className=\"spinner-border spinner-border-sm text-primary\" role=\"status\" aria-hidden=\"true\"></span> Loading...</div>}\n                    pagination={paginationFactory({\n                      sizePerPage: 10,\n                      sizePerPageList: [10],\n                      showTotal: true,\n                      paginationTotalRenderer: customTotalFormatter,\n                    })} />\n                </Col>\n              </Row>\n            </>\n          )\n        }\n\n      </ToolkitProvider>\n    </div>\n  )\n}\n\nexport default CaseTable;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Row, Col, Card, CardBody, Container } from \"reactstrap\";\nimport StatusJumbotron from \"../../components/dashboard/StatusJumbotron\";\n\nimport CaseTable from \"../../components/dashboard/CaseTable\";\nimport { getCaseListData, getCaseMetaData } from '../../redux/actions/caseDataActions';\n// import Filters from \"../../components/dashboard/Filters\";\n// import filterColumns from \"../../components/dashboard/data/filterColumns\";\n\nexport class Dashboard extends Component {\n  componentDidMount() {\n    this.props.getCaseListData();\n    this.props.getCaseMetaData();\n  }\n  render() {\n    const { isLoad, caseData, metaData } = this.props;\n    return (\n      <div className=\"p-5\">\n        <Row>\n          <Col>\n            <StatusJumbotron />\n          </Col>\n        </Row>\n        <Row>\n          <Container fluid={true}>\n            <Card className=\"shadow-sm border-0 rounded-lg\">\n              <CardBody>\n                {/* <Row className=\"pb-4\">\n                  <Col>\n                    <Card>\n                      <CardBody>\n                        <Filters isLoad={isLoad} data={caseData} columns={filterColumns}/>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                </Row> */}\n                <Row >\n                  {/* <Col lg=\"5\">\n                  </Col> */}\n                  <Col lg=\"12\" >\n                    <Card className=\"border-0\">\n                      <CardBody >\n                        <CaseTable isLoad={isLoad} data={caseData} metaData={metaData}/>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Container>\n        </Row>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoad:state.casedata.caseList.isLoad,\n    caseData: state.casedata.caseList.result,\n    metaData:{\n      isLoad:state.casedata.metaData.isLoad,\n      result:state.casedata.metaData.result\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCaseListData: () => dispatch(getCaseListData()),\n    getCaseMetaData: () => dispatch(getCaseMetaData())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import * as constant from \"../constant\";\n// import data from \"../../components/dashboard/data/temp.json\";\n// import _ from \"lodash\";\n\nconst attatchID = (object) => {\n  object.forEach((item, i) => {\n    item.id = i + 1;\n  }) \n return object;\n}\n\nexport const convertTimeStamp = (object) => {\n  object.forEach((item, i) => {\n    item.data_as_of =  Date.parse(item[\"data_as_of\"].replace(/\\//g,\"-\"));\n  }) \n return object;\n}\n\nconst convertToEnglish = (string) =>{\n  let result = [{}];\n  const newstring = string.replace(/確定病名/g, \"disease_name\")\n                          .replace(/確定病例數/g, \"confirmed_case_count\")\n                          .replace(/個案研判日/g, \"data_as_of\")\n                          .replace(/縣市/g, \"county_city\")\n                          .replace(/性別/g, \"gender\")\n                          .replace(/年齡層/g, \"age_group\")\n                          .replace(/是否為境外移入/g, \"imported\")\n                          .replace(/確定病例數/g, \"confirmed_case_count\")\n                          .replace(/嚴重特殊傳染性肺炎/g,\"SARS-CoV-2 Infection\")\n                          .replace(/女/g, \"Female\").replace(/男/g, \"Male\")\n                          .replace(/是/g, \"Y\").replace(/否/g, \"N\")\n                          .replace(/宜蘭縣/g,\"Yilan County\")\n                          .replace(/基隆市/g,\"Keelung City\")\n                          .replace(/台北市/g,\"Taipei City\")\n                          .replace(/新北市/g,\"New Taipei City\")\n                          .replace(/桃園市/g,\"Taoyuan City\")\n                          .replace(/新竹市/g,\"Hsinchu City\")\n                          .replace(/新竹縣/g,\"Hsinchu County\")\n                          .replace(/苗栗縣/g,\"Miaoli County\")\n                          .replace(/台中市/g,\"Taichung City\")\n                          .replace(/南投縣/g,\"Nantou County\")\n                          .replace(/彰化縣/g,\"Changhua County\")\n                          .replace(/雲林縣/g,\"Yunlin County\")\n                          .replace(/嘉義市/g,\"Chiayi City\")\n                          .replace(/嘉義縣/g,\"Chiayi County\")\n                          .replace(/台南市/g,\"Tainan City\")\n                          .replace(/高雄市/g,\"Kaohsiung City\")\n                          .replace(/屏東縣/g,\"Pingtung County\")\n                          .replace(/台東縣/g,\"Taitung County\")\n                          .replace(/花蓮縣/g,\"Hualien County\")\n                          .replace(/澎湖縣/g,\"Penghu County\")\n                          .replace(/金門縣/g,\"Kinmen County\")\n                          .replace(/連江縣/g,\"Lienchiang County\")\n\n  result = newstring     \n  return result;\n}\n\nexport const getCaseListData = () => {\n  return (dispatch) => {\n\n    // const apiResult = JSON.parse(convertToEnglish(JSON.stringify(data)));\n    // dispatch({\n    //       type: constant.CASE_LIST_SUCCESS,\n    //       payload: attatchID(apiResult)\n    //     });\n   \n    fetch(\"https://cors-anywhere.herokuapp.com/https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json\")\n      .then(r => r.text())\n      .then(data => {\n        const apiResult = JSON.parse(convertToEnglish(data));\n        // console.log(\"apiResult\",apiResult);\n        dispatch({\n          type: constant.GET_CASE_LIST_SUCCESS,\n          payload: attatchID(apiResult)\n        });\n      })\n      .catch()\n\n  }\n}\n\nexport const getCaseMetaData = () => {\n  return (dispatch) => {\n\n    fetch(\"https://data.cdc.gov.tw/api/3/action/package_show?id=agsdctable-day-19cov\")\n    .then(response => response.json()).then(data=>{\n      let resultData = {\n        metadata_created: null,\n        metadata_modified: null\n      };\n      const { metadata_created,  metadata_modified } = data.result;\n      resultData  = {\n        metadata_created,\n        metadata_modified\n      }\n      return resultData;\n    }).then(result=>{\n      return dispatch({\n        type:constant.GET_CASE_META_DATA_SUCCESS,\n        payload: result\n      })\n    })\n    \n  }\n}","\nexport const GET_CASE_LIST_SUCCESS = \"GET_CASE_LIST_SUCCESS\";\nexport const GET_CASE_META_DATA_SUCCESS = \"GET_CASE_META_DATA_SUCCESS\"","import * as constant from \"../constant\";\nconst initialState = {\n  caseList: {\n    isLoad: false,\n    result: []\n  },\n  metaData: {\n    isLoad: false,\n    result: {}\n  }\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constant.GET_CASE_LIST_SUCCESS:\n      return {\n        ...state,\n        caseList: {\n          isLoad: true,\n          result: action.payload\n        }\n      }\n    case constant.GET_CASE_META_DATA_SUCCESS:\n      return {\n        ...state,\n        metaData: {\n          isLoad: true,\n          result: action.payload\n        }\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport casedata from \"./caseDataReducer\";\n\nexport default combineReducers({\n  casedata\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from './redux/reducers/rootReducer';\n\nconst store = createStore(rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Dashboard />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/custom.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}